{"version":3,"sources":["ExternalNode.js","cities.js","SortableTree.js","App.js","index.js"],"names":["externalNodeType","availableNodes","forEach","race","dropped","editable","leaf","expanded","externalNodeSpec","beginDrag","props","monitor","component","node","canDrag","title","endDrag","didDrop","externalNodeBaseComponent","this","connectDragSource","isDragging","isDisabled","Button","disabled","primary","dropEffect","Component","ExternalNode","DragSource","connect","dragSource","ExternalNodeContainer","style","lineHeight","Object","keys","map","SortTree","removeNode","path","setState","state","treeData","removeNodeAtPath","getNodeKey","treeIndex","selectThis","currentNode","insertNewNode","addNodeUnderParent","parentKey","length","expandParent","newNode","childable","deletable","children","canDrop","nextParent","prevPath","nextPath","Tab","panes","menuItem","render","Pane","height","dndType","onChange","generateNodeProps","onClick","e","preventDefault","stopPropagation","undefined","fontSize","width","value","event","target","changeNodeAtPath","size","color","circular","icon","src","App","DndProvider","backend","HTML5Backend","Container","Header","as","paddingTop","Divider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fde9a90.chunk.js","sourcesContent":["/**\n * Reference:\n * https://github.com/frontend-collective/react-sortable-tree/blob/master/stories/external-node.js\n */\nimport PropTypes from \"prop-types\";\nimport { DragSource } from \"react-dnd\";\nimport React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { selectedCities } from \"./cities\";\n\nexport const externalNodeType = \"ExternalNode\";\nexport const availableNodes = {};\n\nselectedCities.forEach((race) => {\n  availableNodes[race] = {\n    dropped: false,\n    editable: false,\n    leaf: true,\n    expanded: true,\n  };\n});\n\nconst externalNodeSpec = {\n  beginDrag: (props, monitor, component) => ({ node: { ...props.node } }),\n  canDrag: (props, monitor) => {\n    const { node } = props;\n\n    return !availableNodes[node.title].dropped;\n  },\n  endDrag: (props, monitor, component) => {\n    if (!monitor.didDrop()) return;\n\n    const { node } = props;\n\n    availableNodes[node.title].dropped = true;\n  },\n};\nconst externalNodeCollect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n  didDrop: monitor.didDrop(),\n});\n\nclass externalNodeBaseComponent extends Component {\n  render() {\n    const { connectDragSource, isDragging, node } = this.props;\n\n    const isDisabled =\n      (availableNodes[node.title] && availableNodes[node.title].dropped) ||\n      isDragging;\n\n    return connectDragSource(\n      <span>\n        <Button disabled={isDisabled} primary={!isDisabled}>\n          {node.title}\n        </Button>\n      </span>,\n\n      { dropEffect: \"copy\" }\n    );\n  }\n}\n\nexternalNodeBaseComponent.propTypes = {\n  node: PropTypes.shape({ title: PropTypes.string }).isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nconst ExternalNode = DragSource(\n  externalNodeType,\n  externalNodeSpec,\n  externalNodeCollect\n)(externalNodeBaseComponent);\n\nexport class ExternalNodeContainer extends Component {\n  render() {\n    return (\n      <div style={{ lineHeight: 3 }}>\n        {Object.keys(availableNodes).map((node) => (\n          <ExternalNode node={{ title: node, ...availableNodes[node] }} />\n        ))}\n      </div>\n    );\n  }\n}\n","export const selectedCities = [\n  \"100 mile house\",\n  \"bagot\",\n  \"bickerton west\",\n  \"brookside.\",\n  \"carseland\",\n  \"codys\",\n  \"delaware\",\n  \"edwards\",\n  \"fort kent\",\n  \"gouldtown\",\n  \"havre-aux-maisons\",\n  \"irvine\",\n  \"kugaaruk\",\n  \"lefaivre\",\n  \"mackay siding\",\n  \"membertou\",\n  \"mulhurst bay\",\n  \"notre-dame-de-lorette\",\n  \"peterborough\",\n  \"pratt\",\n  \"robb\",\n  \"saint-edouard-de-maskinonge\",\n  \"saint-stanislas\",\n  \"seeleys bay\",\n  \"spy hill\",\n  \"sussex east\",\n  \"upper brighton\",\n  \"watino\",\n  \"wyevale\",\n];\n","import React, { Component } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport SortableTree, {\n  changeNodeAtPath,\n  addNodeUnderParent,\n  removeNodeAtPath,\n} from \"react-sortable-tree\";\nimport { Button, Tab } from \"semantic-ui-react\";\nimport { externalNodeType } from \"./ExternalNode\";\n\nexport default class SortTree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentNode: {},\n      treeData: [\n        {\n          title: \"Root Group\",\n          editable: false,\n          childable: true,\n          deletable: false,\n          expanded: true,\n          children: [\n            {\n              title: \"\",\n              editable: true,\n              childable: true,\n              deletable: true,\n              expanded: true,\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  removeNode = (path) => {\n    this.setState((state) => ({\n      treeData: removeNodeAtPath({\n        treeData: state.treeData,\n        path,\n        getNodeKey: ({ treeIndex }) => treeIndex,\n      }),\n    }));\n  };\n\n  selectThis = (node, path) => {\n    this.setState({ currentNode: node, path: path });\n  };\n\n  insertNewNode = (path) => {\n    this.setState((state) => ({\n      treeData: addNodeUnderParent({\n        treeData: state.treeData,\n        parentKey: path[path.length - 1],\n        expandParent: true,\n        newNode: {\n          title: \"\",\n          editable: true,\n          childable: true,\n          deletable: true,\n          children: [],\n        },\n        getNodeKey: ({ treeIndex }) => treeIndex,\n      }).treeData,\n    }));\n  };\n\n  canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    // Prevent another root node from forming\n    if (nextParent === null) return false;\n\n    // Prevent leaf nodes from having leaf parents\n    if (nextParent && nextParent.leaf === true) return false;\n\n    return true;\n  };\n\n  render() {\n    const { treeData } = this.state;\n    const getNodeKey = ({ treeIndex }) => treeIndex;\n\n    return (\n      <Tab\n        panes={[\n          {\n            menuItem: \"Tree View\",\n            render: () => (\n              <Tab.Pane>\n                <div style={{ height: \"60vh\" }}>\n                  <SortableTree\n                    treeData={treeData}\n                    dndType={externalNodeType}\n                    canDrop={this.canDrop}\n                    onChange={(treeData) => this.setState({ treeData })}\n                    generateNodeProps={({ node, path }) => ({\n                      title: (\n                        <form\n                          onClick={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            this.selectThis(node, path);\n                          }}\n                        >\n                          {node.editable === true ||\n                          node.editable === undefined ? (\n                            <input\n                              style={{ fontSize: \"1rem\", width: 200 }}\n                              value={node.title}\n                              onChange={(event) => {\n                                const title = event.target.value;\n                                this.setState((state) => ({\n                                  treeData: changeNodeAtPath({\n                                    treeData: state.treeData,\n                                    path,\n                                    getNodeKey,\n                                    newNode: { ...node, title },\n                                  }),\n                                }));\n                              }}\n                            />\n                          ) : (\n                            <span>{node.title}</span>\n                          )}\n                          &nbsp;&nbsp;&nbsp;\n                          {node.childable ? (\n                            <span>\n                              <Button\n                                size=\"mini\"\n                                color=\"blue\"\n                                circular\n                                icon=\"add\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  e.stopPropagation();\n                                  this.insertNewNode(path);\n                                }}\n                              />\n                              {node.deletable &&\n                              node.children &&\n                              !node.children.length ? (\n                                <Button\n                                  size=\"mini\"\n                                  color=\"blue\"\n                                  circular\n                                  icon=\"trash\"\n                                  onClick={(e) => {\n                                    e.preventDefault();\n                                    e.stopPropagation();\n                                    this.removeNode(path);\n                                  }}\n                                />\n                              ) : undefined}\n                            </span>\n                          ) : undefined}\n                        </form>\n                      ),\n                    })}\n                  />\n                </div>\n              </Tab.Pane>\n            ),\n          },\n          {\n            menuItem: \"JSON\",\n            render: () => (\n              <Tab.Pane>\n                <ReactJson src={this.state.treeData} />\n              </Tab.Pane>\n            ),\n          },\n        ]}\n      />\n    );\n  }\n}\n","import SortTree from \"./SortableTree\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { ExternalNodeContainer } from \"./ExternalNode\";\nimport { Divider, Container, Header } from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Container>\n        <Header as=\"h1\" style={{ paddingTop: 10 }}>\n          City Grouping Demo\n        </Header>\n        <Divider />\n        <ExternalNodeContainer />\n        <Divider />\n        <SortTree />\n      </Container>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-sortable-tree/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}